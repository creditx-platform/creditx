services:
  # Oracle Database
  oracle-xe:
    container_name: ${ORACLE_CONTAINER_NAME}
    image: gvenzl/oracle-xe:latest
    ports:
      - "${ORACLE_PORT}:1521"
    environment:
      ORACLE_PASSWORD: ${ORACLE_PWD}
      ORACLE_CHARACTERSET: "AL32UTF8"
      ORACLE_PDB: ${ORACLE_SVC}
    healthcheck:
      test: ["CMD",
          "bash",
          "-c",
          "sqlplus -S '${ORACLE_USER}/${ORACLE_PWD}@//localhost:${ORACLE_PORT}/${ORACLE_SVC}' <<EOF\nSELECT 1 FROM DUAL;\nEXIT;\nEOF"]
      interval: 10s
      timeout: 5s
      retries: 20
      start_period: 60s
    volumes:
      - creditx_oradata:/opt/oracle/oradata
    restart: unless-stopped

  # Kafka
  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: ${KAFKA_CONTAINER_NAME}
    ports:
      - "${KAFKA_PORT}:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_NODE_ID: 1
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@localhost:9093
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_NUM_PARTITIONS: 1
    volumes:
      - kafka_data:/var/lib/kafka/data
    command:
      - sh
      - -c
      - |
        if [ ! -f /var/lib/kafka/data/cluster.id ]; then
          CLUSTER_ID=$$(/bin/kafka-storage random-uuid)
          echo $$CLUSTER_ID > /var/lib/kafka/data/cluster.id
          echo "Generated and persisted Cluster ID: $$CLUSTER_ID"
        else
          CLUSTER_ID=$$(cat /var/lib/kafka/data/cluster.id)
          echo "Using existing Cluster ID: $$CLUSTER_ID"
        fi
        export KAFKA_CLUSTER_ID=$$CLUSTER_ID
        exec /etc/confluent/docker/run

  # Main Service
  creditmainserv:
    container_name: creditx-main-serv
    build:
      context: ./creditMainServ
    image: creditx-creditmainserv
    ports:
      - "${MAIN_PORT}:8080"
    environment:
      ORACLE_HOST: oracle-xe
      ORACLE_PORT: ${ORACLE_PORT}
      ORACLE_SVC: ${ORACLE_SVC}
      ORACLE_USER: ${ORACLE_USER}
      ORACLE_PASSWORD: ${ORACLE_PWD}
    depends_on:
      oracle-xe:
        condition: service_healthy

  # AutoPay Service
  creditautopayserv:
    container_name: creditx-autopay-serv
    build:
      context: ./creditAutoPayServ
    image: creditx-creditautopayserv
    ports:
      - "${AUTOPAY_PORT}:8080"
    environment:
      ORACLE_HOST: oracle-xe
      ORACLE_PORT: ${ORACLE_PORT}
      ORACLE_SVC: ${ORACLE_SVC}
      ORACLE_USER: ${ORACLE_USER}
      ORACLE_PASSWORD: ${ORACLE_PWD}
    depends_on:
      - oracle-xe

  # Batch Service
  creditbatchserv:
    container_name: creditx-batch-serv
    build:
      context: ./creditBatchServ
    image: creditx-creditbatchserv
    ports:
      - "${BATCH_PORT}:8080"
    environment:
      ORACLE_HOST: oracle-xe
      ORACLE_PORT: ${ORACLE_PORT}
      ORACLE_SVC: ${ORACLE_SVC}
      ORACLE_USER: ${ORACLE_USER}
      ORACLE_PASSWORD: ${ORACLE_PWD}
    depends_on:
      - oracle-xe

  # Hold Service
  creditholdserv:
    container_name: creditx-hold-serv
    build:
      context: ./creditHoldServ
    image: creditx-creditholdserv
    ports:
      - "${HOLD_PORT}:8080"
    environment:
      ORACLE_HOST: oracle-xe
      ORACLE_PORT: ${ORACLE_PORT}
      ORACLE_SVC: ${ORACLE_SVC}
      ORACLE_USER: ${ORACLE_USER}
      ORACLE_PASSWORD: ${ORACLE_PWD}
    depends_on:
      - oracle-xe

  # Promo Service
  creditpromoserv:
    container_name: creditx-promo-serv
    build:
      context: ./creditPromoServ
    image: creditx-creditpromoserv
    ports:
      - "${PROMO_PORT}:8080"
    environment:
      ORACLE_HOST: oracle-xe
      ORACLE_PORT: ${ORACLE_PORT}
      ORACLE_SVC: ${ORACLE_SVC}
      ORACLE_USER: ${ORACLE_USER}
      ORACLE_PASSWORD: ${ORACLE_PWD}
    depends_on:
      - oracle-xe

volumes:
  creditx_oradata:
  kafka_data: